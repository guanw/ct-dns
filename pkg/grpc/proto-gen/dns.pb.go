// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns.proto

package dns

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type GetResponse struct {
	Hosts                []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{1}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type PostRequest struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	Operation            string   `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{2}
}

func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (m *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(m, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *PostRequest) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *PostRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type PostResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostResponse) Reset()         { *m = PostResponse{} }
func (m *PostResponse) String() string { return proto.CompactTextString(m) }
func (*PostResponse) ProtoMessage()    {}
func (*PostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{3}
}

func (m *PostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostResponse.Unmarshal(m, b)
}
func (m *PostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostResponse.Marshal(b, m, deterministic)
}
func (m *PostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostResponse.Merge(m, src)
}
func (m *PostResponse) XXX_Size() int {
	return xxx_messageInfo_PostResponse.Size(m)
}
func (m *PostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*GetResponse)(nil), "GetResponse")
	proto.RegisterType((*PostRequest)(nil), "PostRequest")
	proto.RegisterType((*PostResponse)(nil), "PostResponse")
}

func init() { proto.RegisterFile("dns.proto", fileDescriptor_638ff8d8aaf3d8ae) }

var fileDescriptor_638ff8d8aaf3d8ae = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x8a, 0xc2, 0x30,
	0x10, 0x86, 0xdb, 0xed, 0xee, 0x42, 0x26, 0xdd, 0x3d, 0x0c, 0x7b, 0x08, 0x65, 0x0f, 0x25, 0x7b,
	0xe9, 0x82, 0xe4, 0xa0, 0xaf, 0x20, 0x78, 0x13, 0xa9, 0x77, 0xa1, 0xea, 0x80, 0x3d, 0x98, 0xd4,
	0x4e, 0xf4, 0xf9, 0xc5, 0x04, 0x69, 0x8e, 0xde, 0x92, 0x99, 0x9f, 0x2f, 0xdf, 0x1f, 0x10, 0x47,
	0xcb, 0x66, 0x18, 0x9d, 0x77, 0xda, 0x00, 0xac, 0xc8, 0xb7, 0x74, 0xb9, 0x12, 0x7b, 0xac, 0x41,
	0x32, 0x8d, 0xb7, 0xfe, 0x40, 0xeb, 0xee, 0x4c, 0x2a, 0xaf, 0xf3, 0x46, 0xb4, 0xe9, 0x48, 0xff,
	0x81, 0x0c, 0x79, 0x1e, 0x9c, 0x65, 0xc2, 0x1f, 0xf8, 0x38, 0x39, 0xf6, 0xac, 0xf2, 0xba, 0x68,
	0x44, 0x1b, 0x2f, 0xba, 0x03, 0xb9, 0x71, 0xfc, 0x3a, 0x15, 0x7f, 0x41, 0xb8, 0x81, 0xc6, 0xce,
	0xf7, 0xce, 0xaa, 0xb7, 0xb0, 0x9f, 0x06, 0x88, 0xf0, 0xfe, 0xe0, 0xaa, 0x22, 0x2c, 0xc2, 0x59,
	0x7f, 0x43, 0x19, 0x9f, 0x88, 0x22, 0xf3, 0x1d, 0x14, 0x4b, 0xcb, 0xf8, 0x1f, 0xea, 0x6c, 0x23,
	0x1a, 0xa5, 0x99, 0xba, 0x55, 0xa5, 0x49, 0xc4, 0x75, 0x86, 0xb3, 0x28, 0xf9, 0xcc, 0x96, 0x26,
	0x51, 0xae, 0xbe, 0x4c, 0x4a, 0xd7, 0xd9, 0xfe, 0x33, 0x7c, 0xd7, 0xe2, 0x1e, 0x00, 0x00, 0xff,
	0xff, 0x76, 0x05, 0xda, 0x0b, 0x3b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DnsClient is the client API for Dns service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DnsClient interface {
	GetService(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	PostService(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostResponse, error)
}

type dnsClient struct {
	cc *grpc.ClientConn
}

func NewDnsClient(cc *grpc.ClientConn) DnsClient {
	return &dnsClient{cc}
}

func (c *dnsClient) GetService(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/Dns/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dnsClient) PostService(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostResponse, error) {
	out := new(PostResponse)
	err := c.cc.Invoke(ctx, "/Dns/PostService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DnsServer is the server API for Dns service.
type DnsServer interface {
	GetService(context.Context, *GetRequest) (*GetResponse, error)
	PostService(context.Context, *PostRequest) (*PostResponse, error)
}

// UnimplementedDnsServer can be embedded to have forward compatible implementations.
type UnimplementedDnsServer struct {
}

func (*UnimplementedDnsServer) GetService(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetService not implemented")
}
func (*UnimplementedDnsServer) PostService(ctx context.Context, req *PostRequest) (*PostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostService not implemented")
}

func RegisterDnsServer(s *grpc.Server, srv DnsServer) {
	s.RegisterService(&_Dns_serviceDesc, srv)
}

func _Dns_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dns/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServer).GetService(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dns_PostService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DnsServer).PostService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dns/PostService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DnsServer).PostService(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dns_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Dns",
	HandlerType: (*DnsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetService",
			Handler:    _Dns_GetService_Handler,
		},
		{
			MethodName: "PostService",
			Handler:    _Dns_PostService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns.proto",
}
