---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ct-dns
spec:
  replicas: 1 #TODO check if there's a way to make load balancer work with kubectl port-forward
  selector:
    matchLabels:
      app: ct-dns
  template:
    metadata:
      labels:
        app: ct-dns
    spec:
      containers:
        - name: ct-dns
          image: guanw0826/ct-dns:latest
          ports:
            - containerPort: 8080
          env: # Environment variables passed to the container
            - name: CT_DNS_ENV
              value: KUBERNETERS-REDIS
---
apiVersion: v1
kind: Service # Type of kubernetes resource
metadata:
  name: ct-dns-svc # Unique name of the resource
spec:
  selector:
    app: ct-dns
  type: NodePort # Expose the Pods by opening a port on each Node and proxying it to the service.
  ports: # Take incoming HTTP requests on port 9090 and forward them to the targetPort of 8080
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
    - protocol: TCP
      port: 50050
      targetPort: 50050
      name: grpc
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dns-ingress
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: ct-dns-svc
              servicePort: 8080
